"""
Django settings for Project_django project.
Generated by 'django-admin startproject' using Django 4.0.6.
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# Carregar variáveis do ficheiro .env (opcional mas recomendado localmente)
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

API_PREFIX = os.environ.get('PROXY', '')

# SECRET_KEY agora vem do ambiente, com valor por defeito apenas para testes locais
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'dev-secret-key')

# DEBUG também pode vir do ambiente (para controlar ambiente prod/dev)
DEBUG = os.environ.get('DJANGO_DEBUG', 'True') == 'True'

ALLOWED_HOSTS = ['nicoleArq.pythonanywhere.com', '127.0.0.1', '127.0.0.1:8000','localhost',
                 'projects.deisi.ulusofona.pt',
                 'http://projects.deisi.ulusofona.pt',
                 'https://projects.deisi.ulusofona.pt']

CSRF_TRUSTED_ORIGINS = ['http://projects.deisi.ulusofona.pt',
                 'https://projects.deisi.ulusofona.pt']

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'caudais',
    'autenticacao'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Project_django.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Project_django.wsgi.application'

# Database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db'  / 'db.sqlite3',
    }
}

# Autenticacao
LOGIN_URL = os.environ.get('PROXY', '') + '/autenticacao/login/'
LOGIN_REDIRECT_URL = os.environ.get('PROXY', '') + '/caudais/dashboard/'
LOGOUT_REDIRECT_URL = os.environ.get('PROXY', '') + '/autenticacao/login/'

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static files
STATIC_URL = os.environ.get('STATIC_URL', '/static/')
MEDIA_ROOT = os.environ.get('MEDIA_ROOT', '/home/nicoleArq/Project_django/media')
MEDIA_URL = os.environ.get('MEDIA_URL', '/media/')
STATIC_ROOT = os.environ.get('STATIC_ROOT', '/home/nicoleArq/Project_django/static')

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# MailGun (valores lidos de variáveis de ambiente)
MAILGUN_API_KEY = os.environ.get('MAILGUN_API_KEY', '')
MAILGUN_DOMAIN = os.environ.get('MAILGUN_DOMAIN', '')
DATA_UPLOAD_MAX_MEMORY_SIZE = 20 * 1024 * 1024 